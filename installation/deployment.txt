Step 1 (add our sudo installation)
sudo apt update
sudo apt install python3-pip virtualenv gunicorn libpq-dev nginx curl daemon
sudo apt install build-essential libpoppler-cpp-dev pkg-config libjpeg8-dev zlib1g-dev libfreetype6-dev
sudo apt install -y unoconv

-----------------------------
Ste 2: Git Clone
Make your directory where you want and Git clone
4) mkdir boardsheet
cd boardsheet
git init
git remote add origin https://github.com/DigitalNet/HopeVUE.git
git checkout -b meet
git config credential.helper store
git pull origin meet

---------------------------------
Step 3: Configuration
nano config.json
{
  "active_db": "",
  "env": "dev",
  "local": "",
  "site_name": "eng",
  "postgresql": {
    "ENGINE": "django.db.backends.postgresql",
    "NAME": "eng",
    "USER": "jang",
    "PASSWORD": "123"
  },
  "ALLOWED_HOSTS": [
    "www.growingvision.co",
    "growingvision.co",
    "18.119.124.91"
  ],
  "mysql": {
    "ENGINE": "django.db.backends.mysql",
    "NAME": "eng",
    "USER": "root",
    "PASSWORD": "123"
  },
  "site_url": "https://www.growingvision.co"
}


--------------------------------------

Step 4. Install Packages:
python3 -m /path/to/pyenvs/env1
source /path/to/pyenvs/env1/bin/activate
sudo pip install -r requirements.txt

--------------------------------------
Step 5. Migrations:
python3 manage.py makemigrations
python3 manage.py migrate


-----------------------------------
Step 6. Runserver
python3 manage.py runserver


-------------------------------------
Step 7. nginx settings:
sudo ln -s /etc/nginx/sites-available /etc/nginx/sites-enabled
sudo nano /etc/nginx/sites-available/your_nginx_setting_file

server {
    server_name meetvue.com www.meetvue.com;
    listen 80;
}
server {
    server_name dn.meetvue.com;
    location / {
        proxy_pass  http://127.0.0.1:8000/;
        proxy_set_header Host $host;
    }
    listen 80;
}
-----------------------------------
server {
    server_name boardsheet.com www.boardsheet.com;    
    location / {
        proxy_pass  http://127.0.0.1:8000/;
        proxy_set_header Host $host;
    }
}

-----------------------------------
Step 8. SSL installation:

sudo apt-get update
sudo apt-add-repository -r ppa:certbot/certbot
sudo apt install python3-certbot-apache
sudo ufw allow 'Apache Full'
sudo ufw delete allow 'Apache'
sudo certbot --apache -d your_domain -d www.your_domain


step 9. Service:

1) make a file at home directory named run no extention with following text

#!/bin/sh
python3 /home/sami/django/jangomeet/manage.py runserver 0.0.0.0:8000

apply sudo chmod u+x run

2) sudo nano /lib/systemd/system/myservice1.service with following content

[Unit]
Description=Spark service
[Service]
ExecStart=/home/sami_akram/run
[Install]
WantedBy=multi-user.target

3)
sudo systemctl daemon-reload
sudo systemctl enable myservice1
sudo systemctl start myservice1
sudo systemctl status myservice1
