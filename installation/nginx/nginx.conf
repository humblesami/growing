# sudo ln -s /etc/nginx/sites-available/gv.conf /etc/nginx/sites-enabled/gv.conf
server {
    error_log  /var/log/nginx/www.growingvision_error.log;
    listen 443 ssl http2;
    server_name www.growingvision.co;
    root /var/www/growing;
    location = /favicon.ico { access_log off; log_not_found off; }
    # location = /serverworker.js { access_log off; log_not_found off; }
    location /static/ {
        root /var/www/growing;
    }
    location /media/ {
        root /var/www/growing;
    }
    location / {
        include proxy_params;
        proxy_pass http://unix:/run/gunicorn.sock;
    }

    # adjust as per your needs #
    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate #
    ssl_certificate /etc/letsencrypt/live/growingvision.co/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/growingvision.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    #ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    #ssl_session_tickets off;
    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    #ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    #ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Xss-Protection "1";

    # OCSP Stapling
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
    #resolver <IP DNS resolver>;

    ssl_buffer_size 8k;
}
server {
    listen      80;
    server_name www.growingvision.co;
    return 307 https://$server_name$request_uri;
}
# # Redirect http://theos.in:80 to https://theos.in:443
server {
    listen      80;
    server_name growingvision.co;
    return 307 https://www.growingvision.co$request_uri;
}
server {
    listen 443 ssl;
    server_name growingvision.co;
    return 307 https://www.growingvision.co$request_uri;

    ssl_certificate /etc/letsencrypt/live/growingvision.co/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/growingvision.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}